/*
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
 *      1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

#include <iostream>

int getfibonaccinumber(int numberofterms)
{
    if(numberofterms > 1)
        return  getfibonaccinumber(numberofterms - 2) + getfibonaccinumber(numberofterms - 1);
    return 1;
}

int main()
{
    //getfibonaccinumber(1);

    long sum = 0;
    long limit = getfibonaccinumber(1);
    while(limit < 4000000)
    {
        static int i = 1;
        if (limit % 2 == 0)
            sum += limit;
        limit = getfibonaccinumber(++i);
    }
    std::cout << sum << std::endl;
    return 0;
}
